// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var Curry = require("bs-platform/lib/js/curry.js");

function print(v) {
  var str;
  switch (v.TAG | 0) {
    case /* Int */0 :
        str = String(v._0);
        break;
    case /* Float */1 :
        str = v._0.toString();
        break;
    case /* String */2 :
        str = "\"" + (v._0 + "\"");
        break;
    
  }
  console.log(str);
  
}

function partial_map(values, func) {
  return List.map((function (v) {
                var v$prime = Curry._1(func, v);
                if (v$prime !== undefined) {
                  return v$prime;
                } else {
                  return v;
                }
              }), values);
}

function test(param) {
  var ls$prime = partial_map({
        hd: {
          TAG: /* Int */0,
          _0: 5
        },
        tl: {
          hd: {
            TAG: /* String */2,
            _0: "hello"
          },
          tl: {
            hd: {
              TAG: /* Int */0,
              _0: 2
            },
            tl: {
              hd: {
                TAG: /* Float */1,
                _0: 3.5
              },
              tl: {
                hd: {
                  TAG: /* Int */0,
                  _0: 16
                },
                tl: /* [] */0
              }
            }
          }
        }
      }, (function (value) {
          switch (value.TAG | 0) {
            case /* Int */0 :
                return {
                        TAG: /* Int */0,
                        _0: (value._0 << 1)
                      };
            case /* Float */1 :
            case /* String */2 :
                return ;
            
          }
        }));
  return List.iter(print, ls$prime);
}

test(undefined);

exports.print = print;
exports.partial_map = partial_map;
exports.test = test;
/*  Not a pure module */
